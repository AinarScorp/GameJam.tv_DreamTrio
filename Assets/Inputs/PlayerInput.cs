//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Inputs/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""PlayerBasic"",
            ""id"": ""f7fde57d-5800-4baf-897c-d8dd18bb2a0a"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ea890b75-f4ca-45ce-afa0-7ddd2cc131b9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MeleeAttack"",
                    ""type"": ""Button"",
                    ""id"": ""72a89628-3ca7-4d34-8ed1-3d8ddef0bc22"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MagicAttack"",
                    ""type"": ""Button"",
                    ""id"": ""e8a99517-8a8e-46a5-ae92-709dd52559ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePos"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6c2eb0cb-02f9-4e0c-a97f-930bf3512e5f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""531d41a8-c429-4075-8507-8c1665dd0a2c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d744361e-e8cd-4475-a78a-03652f2bca99"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d1af2055-02b1-4995-8be7-a192e79ddf1f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e4ca6e81-324d-4660-a905-76a2ba88e977"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9f452897-b2d0-4376-aafd-939c135f371f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e8830469-8eb2-49d9-ae28-7f86a87dcb65"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MeleeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c1ae14b-5cb3-4b9a-9ff5-412c27a4d499"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MagicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70e7cdcb-7830-418c-a32d-97e903652a88"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerBasic
        m_PlayerBasic = asset.FindActionMap("PlayerBasic", throwIfNotFound: true);
        m_PlayerBasic_Movement = m_PlayerBasic.FindAction("Movement", throwIfNotFound: true);
        m_PlayerBasic_MeleeAttack = m_PlayerBasic.FindAction("MeleeAttack", throwIfNotFound: true);
        m_PlayerBasic_MagicAttack = m_PlayerBasic.FindAction("MagicAttack", throwIfNotFound: true);
        m_PlayerBasic_MousePos = m_PlayerBasic.FindAction("MousePos", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerBasic
    private readonly InputActionMap m_PlayerBasic;
    private IPlayerBasicActions m_PlayerBasicActionsCallbackInterface;
    private readonly InputAction m_PlayerBasic_Movement;
    private readonly InputAction m_PlayerBasic_MeleeAttack;
    private readonly InputAction m_PlayerBasic_MagicAttack;
    private readonly InputAction m_PlayerBasic_MousePos;
    public struct PlayerBasicActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerBasicActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerBasic_Movement;
        public InputAction @MeleeAttack => m_Wrapper.m_PlayerBasic_MeleeAttack;
        public InputAction @MagicAttack => m_Wrapper.m_PlayerBasic_MagicAttack;
        public InputAction @MousePos => m_Wrapper.m_PlayerBasic_MousePos;
        public InputActionMap Get() { return m_Wrapper.m_PlayerBasic; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerBasicActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerBasicActions instance)
        {
            if (m_Wrapper.m_PlayerBasicActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMovement;
                @MeleeAttack.started -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMeleeAttack;
                @MeleeAttack.performed -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMeleeAttack;
                @MeleeAttack.canceled -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMeleeAttack;
                @MagicAttack.started -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMagicAttack;
                @MagicAttack.performed -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMagicAttack;
                @MagicAttack.canceled -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMagicAttack;
                @MousePos.started -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMousePos;
                @MousePos.performed -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMousePos;
                @MousePos.canceled -= m_Wrapper.m_PlayerBasicActionsCallbackInterface.OnMousePos;
            }
            m_Wrapper.m_PlayerBasicActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MeleeAttack.started += instance.OnMeleeAttack;
                @MeleeAttack.performed += instance.OnMeleeAttack;
                @MeleeAttack.canceled += instance.OnMeleeAttack;
                @MagicAttack.started += instance.OnMagicAttack;
                @MagicAttack.performed += instance.OnMagicAttack;
                @MagicAttack.canceled += instance.OnMagicAttack;
                @MousePos.started += instance.OnMousePos;
                @MousePos.performed += instance.OnMousePos;
                @MousePos.canceled += instance.OnMousePos;
            }
        }
    }
    public PlayerBasicActions @PlayerBasic => new PlayerBasicActions(this);
    public interface IPlayerBasicActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMeleeAttack(InputAction.CallbackContext context);
        void OnMagicAttack(InputAction.CallbackContext context);
        void OnMousePos(InputAction.CallbackContext context);
    }
}
